buildscript {
	repositories {
		jcenter()
		// Needed for mlcp dependency: XCC
		maven { url "http://developer.marklogic.com/maven2/" }
	}
	dependencies {
		classpath "com.marklogic:marklogic-contentpump:9.0.3"
		classpath "com.marklogic:ml-gradle:3.6.0"
	}
}

apply plugin: "com.marklogic.ml-gradle"

repositories {
	jcenter()
	// Needed for mlcp dependency
	maven { url "http://developer.marklogic.com/maven2/" }
	maven { url "http://repository.cloudera.com/artifactory/cloudera-repos/" }
}

configurations {
	mlcp {
		resolutionStrategy {
			force "xml-apis:xml-apis:1.4.01"
		}
	}
}


dependencies {
	mlcp "com.marklogic:mlcp:9.0.3"
	mlcp files("lib")
}

/***************************************************************
					Optional tasks to test redaction of data
***************************************************************/

/*
* The import task below is an example of using the built-in MLCP Task in ml-gradle and will import sample JSON
* documents to the specified content database while applying the applicable collections to the content so that
* the redaction rules can be applied
* */
task importSampleRedactionData(type: com.marklogic.gradle.task.MlcpTask) {
	description = "Example of using mlcp and MlcpTask to import documents to test redaction rules"
	classpath = configurations.mlcp
	command = "IMPORT"
	database = mlAppConfig.contentDatabaseName
	input_file_path = "data/import"
	output_collections = "security-rules,pii-rules,email-rules"
	output_permissions = "rest-reader,read,rest-writer,update"
	output_uri_replace = ".*import,'/import'"
	logOutputUri = "/redaction.txt"
}


/*
* The export task below shows an example of using JavaExec inside Gradle to invoke MLCP to export the documents.
* This task, while a useful example, must be invoked this way because the built-in MLCP task does not yet recognize
* the "redaction" option being passed. This will be addressed in a future release.
* Exported documents will be within this project folder under /data/export
* */
task exportSampleRedactionData(type: JavaExec) {
	classpath = configurations.mlcp
	main = 'com.marklogic.contentpump.ContentPump'

	args = [
		"EXPORT",
		"-host", "${mlHost}",
		"-port", "8130",
		"-username", "${mlUsername}",
		"-password", "${mlPassword}",
		"-database", mlAppConfig.contentDatabaseName,
		"-output_file_path", "data/export",
		"-collection_filter", "security-rules",
		"-redaction", "security-rules"]
	/*
	* Applying "security-rules" as the redaction collection will redact both email and SSN fields in the documents
	* You may also redact just the email or ths SSN fields individually by applying only those specific collections
	* i.e. "pii-rules" OR "email-rules"

 */

}


